{"ast":null,"code":"import { interval } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../quote.service\";\nexport class QuoteDisplayComponent {\n  constructor(quoteService) {\n    this.quoteService = quoteService;\n    this.randomQuote = '';\n  }\n  ngOnInit() {\n    // Initially load a random quote\n    this.loadRandomQuote();\n    // Use interval to refresh the quote every 5 seconds\n    interval(5000).pipe(\n    // Fetch a new random quote\n    switchMap(() => this.quoteService.getRandomQuote())).subscribe(quote => {\n      // Update the random quote\n      this.randomQuote = quote;\n    });\n  }\n  loadRandomQuote() {\n    this.quoteService.getRandomQuote().subscribe(quote => {\n      this.randomQuote = quote;\n    });\n  }\n}\nQuoteDisplayComponent.ɵfac = function QuoteDisplayComponent_Factory(t) {\n  return new (t || QuoteDisplayComponent)(i0.ɵɵdirectiveInject(i1.QuoteService));\n};\nQuoteDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuoteDisplayComponent,\n  selectors: [[\"app-quote-display\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"quote-bubble\"], [1, \"quote\"]],\n  template: function QuoteDisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.randomQuote);\n    }\n  },\n  styles: [\".quote-bubble[_ngcontent-%COMP%] {\\n    position: fixed;\\n    bottom: 20px;\\n    right: 20px;\\n    background-color: #007bff;\\n    color: #fff;\\n    padding: 10px;\\n    \\n\\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\\n    z-index: 9999;\\n    cursor: pointer;\\n  }\\n  \\n  .quote[_ngcontent-%COMP%] {\\n    font-style: italic;\\n    font-size: 14px;\\n    margin: 0;\\n    text-align: center;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXVvdGUtZGlzcGxheS9xdW90ZS1kaXNwbGF5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksZUFBZTtJQUNmLFlBQVk7SUFDWixXQUFXO0lBQ1gseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxhQUFhO0lBQ2Isd0JBQXdCO0lBQ3hCLDJDQUEyQztJQUMzQyxhQUFhO0lBQ2IsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsU0FBUztJQUNULGtCQUFrQjtFQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4ucXVvdGUtYnViYmxlIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGJvdHRvbTogMjBweDtcclxuICAgIHJpZ2h0OiAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIC8qIGJvcmRlci1yYWRpdXM6IDIwJTsgKi9cclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgICB6LWluZGV4OiA5OTk5O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICAucXVvdGUge1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["interval","switchMap","QuoteDisplayComponent","constructor","quoteService","randomQuote","ngOnInit","loadRandomQuote","pipe","getRandomQuote","subscribe","quote","i0","ɵɵdirectiveInject","i1","QuoteService","selectors","decls","vars","consts","template","QuoteDisplayComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate"],"sources":["C:\\Users\\Sree\\lib\\lms\\src\\app\\quote-display\\quote-display.component.ts","C:\\Users\\Sree\\lib\\lms\\src\\app\\quote-display\\quote-display.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { QuoteService } from '../quote.service';\nimport { Observable, interval } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-quote-display',\n  templateUrl: './quote-display.component.html',\n  styleUrls: ['./quote-display.component.css'],\n})\nexport class QuoteDisplayComponent implements OnInit {\n  randomQuote: string='';\n\n  constructor(private quoteService: QuoteService) {}\n\n  ngOnInit() {\n    // Initially load a random quote\n    this.loadRandomQuote();\n\n    // Use interval to refresh the quote every 5 seconds\n    interval(5000)\n      .pipe(\n        // Fetch a new random quote\n        switchMap(() => this.quoteService.getRandomQuote())\n      )\n      .subscribe((quote: string) => {\n        // Update the random quote\n        this.randomQuote = quote;\n      });\n  }\n\n  loadRandomQuote() {\n    this.quoteService.getRandomQuote().subscribe((quote: string) => {\n      this.randomQuote = quote;\n    });\n  }\n}\n","\n\n<div class=\"quote-bubble\">\n    <p class=\"quote\">{{ randomQuote }}</p>\n  </div>\n  "],"mappings":"AAEA,SAAqBA,QAAQ,QAAQ,MAAM;AAC3C,SAASC,SAAS,QAAQ,gBAAgB;;;AAO1C,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAFhC,KAAAC,WAAW,GAAS,EAAE;EAE2B;EAEjDC,QAAQA,CAAA;IACN;IACA,IAAI,CAACC,eAAe,EAAE;IAEtB;IACAP,QAAQ,CAAC,IAAI,CAAC,CACXQ,IAAI;IACH;IACAP,SAAS,CAAC,MAAM,IAAI,CAACG,YAAY,CAACK,cAAc,EAAE,CAAC,CACpD,CACAC,SAAS,CAAEC,KAAa,IAAI;MAC3B;MACA,IAAI,CAACN,WAAW,GAAGM,KAAK;IAC1B,CAAC,CAAC;EACN;EAEAJ,eAAeA,CAAA;IACb,IAAI,CAACH,YAAY,CAACK,cAAc,EAAE,CAACC,SAAS,CAAEC,KAAa,IAAI;MAC7D,IAAI,CAACN,WAAW,GAAGM,KAAK;IAC1B,CAAC,CAAC;EACJ;;AAzBWT,qBAAqB,C;mBAArBA,qBAAqB,EAAAU,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAArBb,qBAAqB,C;QAArBA,qBAAqB;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRlCV,EAAA,CAAAY,cAAA,aAA0B;MACLZ,EAAA,CAAAa,MAAA,GAAiB;MAAAb,EAAA,CAAAc,YAAA,EAAI;;;MAArBd,EAAA,CAAAe,SAAA,GAAiB;MAAjBf,EAAA,CAAAgB,iBAAA,CAAAL,GAAA,CAAAlB,WAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}