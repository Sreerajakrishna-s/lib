{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../cart.service\";\nimport * as i2 from \"@angular/common\";\nfunction CheckoutComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, item_r1.price));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(10, 6, item_r1.total));\n  }\n}\nexport class CheckoutComponent {\n  constructor(cartService) {\n    this.cartService = cartService;\n    this.cartItems = this.cartService.getCartItems();\n    this.totalPrice = this.cartService.calculateTotalPrice();\n  }\n  onCheckout() {\n    // Here, you can implement the logic for processing the order, payments, etc.\n    // This is a placeholder for demonstration purposes.\n    alert('Order placed successfully!');\n    this.cartService.clearCart(); // Clear the cart after placing the order.\n  }\n}\n\nCheckoutComponent.ɵfac = function CheckoutComponent_Factory(t) {\n  return new (t || CheckoutComponent)(i0.ɵɵdirectiveInject(i1.CartService));\n};\nCheckoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckoutComponent,\n  selectors: [[\"app-checkout\"]],\n  decls: 24,\n  vars: 4,\n  consts: [[1, \"checkout-container\"], [1, \"cart-summary\"], [4, \"ngFor\", \"ngForOf\"], [1, \"total\"], [3, \"click\"]],\n  template: function CheckoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Checkout\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"h3\");\n      i0.ɵɵtext(5, \"Order Summary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"table\")(7, \"thead\")(8, \"tr\")(9, \"th\");\n      i0.ɵɵtext(10, \"Item\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Quantity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Total\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"tbody\");\n      i0.ɵɵtemplate(18, CheckoutComponent_tr_18_Template, 11, 8, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"p\", 3);\n      i0.ɵɵtext(20);\n      i0.ɵɵpipe(21, \"currency\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function CheckoutComponent_Template_button_click_22_listener() {\n        return ctx.placeOrder();\n      });\n      i0.ɵɵtext(23, \"Place Order\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cartItems);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Total: \", i0.ɵɵpipeBind1(21, 2, ctx.totalPrice), \"\");\n    }\n  },\n  dependencies: [i2.NgForOf, i2.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","item_r1","title","quantity","ɵɵpipeBind1","price","total","CheckoutComponent","constructor","cartService","cartItems","getCartItems","totalPrice","calculateTotalPrice","onCheckout","alert","clearCart","ɵɵdirectiveInject","i1","CartService","selectors","decls","vars","consts","template","CheckoutComponent_Template","rf","ctx","ɵɵtemplate","CheckoutComponent_tr_18_Template","ɵɵlistener","CheckoutComponent_Template_button_click_22_listener","placeOrder","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Sree\\lib\\lms\\src\\app\\checkout\\checkout.component.ts","C:\\Users\\Sree\\lib\\lms\\src\\app\\checkout\\checkout.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CartService } from '../cart.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent {\n  cartItems = this.cartService.getCartItems();\n  totalPrice = this.cartService.calculateTotalPrice();\n\n  constructor(private cartService: CartService) {}\n\n  onCheckout() {\n    // Here, you can implement the logic for processing the order, payments, etc.\n    // This is a placeholder for demonstration purposes.\n    alert('Order placed successfully!');\n    this.cartService.clearCart(); // Clear the cart after placing the order.\n  }\n}\n","<div class=\"checkout-container\">\n    <h2>Checkout</h2>\n    <div class=\"cart-summary\">\n      <h3>Order Summary</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Item</th>\n            <th>Quantity</th>\n            <th>Price</th>\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of cartItems\">\n            <td>{{ item.title }}</td>\n            <td>{{ item.quantity }}</td>\n            <td>{{ item.price | currency }}</td>\n            <td>{{ item.total | currency }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <p class=\"total\">Total: {{ totalPrice | currency }}</p>\n    </div>\n    <button (click)=\"placeOrder()\">Place Order</button>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}